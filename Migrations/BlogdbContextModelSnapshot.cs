// <auto-generated />
using System;
using EFCore_BloggingApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EFCore_BloggingApp.Migrations
{
    [DbContext(typeof(BlogdbContext))]
    partial class BlogdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EFCore_BloggingApp.Models.Comment", b =>
                {
                    b.Property<int>("Commentid")
                        .HasColumnType("integer")
                        .HasColumnName("commentid");

                    b.Property<DateTime?>("Createdat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Postid")
                        .HasColumnType("integer")
                        .HasColumnName("postid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("Commentid")
                        .HasName("comment_pkey");

                    b.HasIndex("Postid");

                    b.ToTable("comment", (string)null);
                });

            modelBuilder.Entity("EFCore_BloggingApp.Models.Post", b =>
                {
                    b.Property<int>("Postid")
                        .HasColumnType("integer")
                        .HasColumnName("postid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime?>("Createdat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Postid")
                        .HasName("post_pkey");

                    b.ToTable("post", (string)null);
                });

            modelBuilder.Entity("EFCore_BloggingApp.Models.Comment", b =>
                {
                    b.HasOne("EFCore_BloggingApp.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("Postid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("comment_postid_fkey");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("EFCore_BloggingApp.Models.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
